{"version":3,"sources":["CountdownTimer.js","index.js"],"names":["CountdownTimer","constructor","selector","targetDate","timerRef","document","querySelector","daysRef","hoursRef","minsRef","secsRef","timeLeft","countDownTime","timerId","init","getTime","Date","now","setTimeLeft","render","start","countDownFunc","getFuncForTimer","setInterval","clearInterval","innerHTML","getDays","getHours","getMins","getSecs","time","days","transformToFormat","Math","floor","hours","mins","secs","String","padStart","timer"],"mappings":";AAA4B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,oBAAA,EAArB,MAAMA,EACXC,aAAY,SAAEC,EAAF,WAAYC,IAChBC,MAAAA,EAAWC,SAASC,cAAcJ,GACnCC,KAAAA,WAAaA,EACbI,KAAAA,QAAUH,EAASE,cAAc,uBACjCE,KAAAA,SAAWJ,EAASE,cAAc,wBAClCG,KAAAA,QAAUL,EAASE,cAAc,uBACjCI,KAAAA,QAAUN,EAASE,cAAc,uBACjCK,KAAAA,SAAW,KACXC,KAAAA,cAAgB,IAChBC,KAAAA,QAAU,KAEjBC,OACQH,MAAAA,EAAW,KAAKR,WAAWY,UAAYC,KAAKC,MAC7CC,KAAAA,YAAYP,GACZQ,KAAAA,SAEPC,QACON,KAAAA,OACCO,MAAAA,EAAgB,KAAKC,kBACtBT,KAAAA,QAAUU,YAAYF,EAAe,KAAKT,eAEjDM,YAAYP,GACLA,KAAAA,SAAWA,GAAY,EAAIA,EAAW,EAE7CW,kBAWSX,MAVU,KACX,GAAkB,IAAlB,KAAKA,UAAkB,KAAKE,QAG9B,OAFAW,cAAc,KAAKX,cACdA,KAAAA,QAAU,MAGXF,MAAAA,EAAW,KAAKA,SAAW,KAAKC,cACjCM,KAAAA,YAAYP,GACZQ,KAAAA,UAITA,SACOZ,KAAAA,QAAQkB,UAAY,KAAKC,QAAQ,KAAKf,UACtCH,KAAAA,SAASiB,UAAY,KAAKE,SAAS,KAAKhB,UACxCF,KAAAA,QAAQgB,UAAY,KAAKG,QAAQ,KAAKjB,UACtCD,KAAAA,QAAQe,UAAY,KAAKI,QAAQ,KAAKlB,UAE7Ce,QAAQI,GAECC,OADM,KAAKC,kBAAkBC,KAAKC,MAAMJ,EAAQ,QAGzDH,SAASG,GAIAK,OAHO,KAAKH,kBACjBC,KAAKC,MAAOJ,EAAQ,MAAyB,OAIjDF,QAAQE,GAECM,OADM,KAAKJ,kBAAkBC,KAAKC,MAAOJ,EAAQ,KAAoB,MAI9ED,QAAQC,GAECO,OADM,KAAKL,kBAAkBC,KAAKC,MAAOJ,EAAQ,IAAc,MAGxEE,kBAAkBF,GACTQ,OAAAA,OAAOR,GAAMS,SAAS,EAAG,MAhER,QAAA,eAAA;;ACM5B,aANA,IAAA,EAAA,QAAA,oBAEA,MAAMC,EAAQ,IAAIxC,EAAJ,eAAmB,CAC/BE,SAAU,WACVC,WAAY,IAAIa,KAAK,2BAEvBwB,EAAMpB","file":"src.52fc9c5c.js","sourceRoot":"../src","sourcesContent":["export class CountdownTimer {\n  constructor({ selector, targetDate }) {\n    const timerRef = document.querySelector(selector);\n    this.targetDate = targetDate;\n    this.daysRef = timerRef.querySelector('[data-value=\"days\"]');\n    this.hoursRef = timerRef.querySelector('[data-value=\"hours\"]');\n    this.minsRef = timerRef.querySelector('[data-value=\"mins\"]');\n    this.secsRef = timerRef.querySelector('[data-value=\"secs\"]');\n    this.timeLeft = null;\n    this.countDownTime = 1000;\n    this.timerId = null;\n  }\n  init() {\n    const timeLeft = this.targetDate.getTime() - Date.now();\n    this.setTimeLeft(timeLeft);\n    this.render();\n  }\n  start() {\n    this.init();\n    const countDownFunc = this.getFuncForTimer();\n    this.timerId = setInterval(countDownFunc, this.countDownTime);\n  }\n  setTimeLeft(timeLeft) {\n    this.timeLeft = timeLeft >= 0 ? timeLeft : 0;\n  }\n  getFuncForTimer() {\n    const timeLeft = () => {\n      if (this.timeLeft === 0 && this.timerId) {\n        clearInterval(this.timerId);\n        this.timerId = null;\n        return;\n      }\n      const timeLeft = this.timeLeft - this.countDownTime;\n      this.setTimeLeft(timeLeft);\n      this.render();\n    };\n    return timeLeft;\n  }\n  render() {\n    this.daysRef.innerHTML = this.getDays(this.timeLeft);\n    this.hoursRef.innerHTML = this.getHours(this.timeLeft);\n    this.minsRef.innerHTML = this.getMins(this.timeLeft);\n    this.secsRef.innerHTML = this.getSecs(this.timeLeft);\n  }\n  getDays(time) {\n    const days = this.transformToFormat(Math.floor(time / (1000 * 60 * 60 * 24)));\n    return days;\n  }\n  getHours(time) {\n    const hours = this.transformToFormat(\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n    );\n    return hours;\n  }\n  getMins(time) {\n    const mins = this.transformToFormat(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    return mins;\n  }\n\n  getSecs(time) {\n    const secs = this.transformToFormat(Math.floor((time % (1000 * 60)) / 1000));\n    return secs;\n  }\n  transformToFormat(time) {\n    return String(time).padStart(2, '0');\n  }\n}\n","import { CountdownTimer } from './CountdownTimer';\n\nconst timer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Jul 16, 2021 20:15:00'),\n});\ntimer.start();\n"]}